" mandatory portion to work with Vundle
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'Chiel92/vim-autoformat'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'rust-lang/rust.vim'
" other plugins go here
call vundle#end()
filetype plugin indent on
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

let g:formatdef_custom = '"astyle -n"'
let g:formatters_c = ['custom']
let g:formatters_cxx = ['custom']
autocmd BufWritePre,BufReadPost *.h,*.hpp,*.c,*.cpp : Autoformat

autocmd BufNewFile,BufReadPost *.md set filetype=markdown
au FileType text set autoindent

" set number of colors available
" set t_Co=256
set background=dark
syntax on " turn on syntax highlighting

" set up tabbing
set tabstop=4 " sets the width of a tab character
set softtabstop=4 " width of soft tabs (tabs made of spaces)
set shiftwidth=4 " how many cols of indentation to start/end when autoindenting
autocmd FileType python setlocal tabstop=4 " override python defaults
autocmd FileType python setlocal shiftwidth=4

set shiftround " forces << and >> to use multiples of shiftwidth
set expandtab " expand all tabs to spaces
set smarttab " insert tabs at the start of a line using shiftwidth

set backspace=indent,eol,start " allow backspaces through autoindentation

" set up searching
set hlsearch " highlight search matches
set incsearch " show search matches as you type
set ignorecase " ignore case in "/" searches by default
set smartcase " if pattern contains uppercase, use case sensitive search
set gdefault " global search & replace by default (not just first occurrence)

set number
set relativenumber
set noshowmode
" set ruler " show line, column coordinates of the cursor in the bottom-right
set showmatch " highlight matching parens

" line length settings
set wrap
set linebreak
set formatoptions=qrn1
" set colorcolumn=81

" features on/off
set nobackup " turn off backup files
set noswapfile " turn off swap files  

" autocmd BufEnter *.txt syntax off " turn off syntax highlighting for text files
autocmd BufEnter *.ld syntax off " turn off syntax highlighting for loader directive files

" force use of hjkl instead of arrow keys
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>
nnoremap j gj
nnoremap k gk

" turn off the help key (always hit this when reaching for <ESC
inoremap <F1> <ESC>
nnoremap <F1> <ESC>
vnoremap <F1> <ESC>

" leader key customizations
let mapleader=',' " change the leader key to comma
nnoremap <leader><space> :noh<cr> " clear search highlighting
nnoremap <leader>v <C-w>v<C-w>l " create a new vertical split
nnoremap <leader>s <C-w>s<C-w>j " create a new horizontal split
nnoremap <C-h> <C-w>h " make split navigation use hjkl
nnoremap <C-j> <C-w>j " make split navigation use hjkl
nnoremap <C-k> <C-w>k " make split navigation use hjkl
nnoremap <C-l> <C-w>l " make split navigation use hjkl

" automatically run rustfmt when saving rust files
let g:rustfmt_autosave = 1
